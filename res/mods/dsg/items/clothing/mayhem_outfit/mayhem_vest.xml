<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- For a version without all of the comments, see "rental_daddy.xml". -->
<clothing>
	<!-- GENERAL INFORMATION: If you are unsure of anything, please use the LT Discord to ask for help!
	
	Your clothing's id (which is very important to the game), is calculated from your clothing's folder and .xml name using the following code:
		modAuthorDirectory.getName()+"_"+innerChild.getParentFile().getName()+"_"+innerChild.getName().split("\\.")[0]
	This results in this particular item's id being: "innoxia_template_socks".
	
	PLEASE NOTE: This clothing item will not show up in the game, due to the rarity being set to LEGENDARY, and no shopkeepers being defined as selling this item. You can spawn it from the debug menu if you wish. The debug menu is accessed by typing "buggy" (without quotes) at any point in the game. It is best to do this when not in the middle of combat, sex, or movement-locked dialogue, as it will break you out of it.
	
	IMPORTANT: If you ever change the name of this .xml, or containing folder, any items of this clothing that exist in the game will be removed!-->
	
	<coreAttributes>
		<!-- How attribution to the mod author (you!) should be displayed in the clothing's tooltip. If left blank or not included, a default attribution based on folder name will be used. (I have commented out this example, as I don't want items created by myself to have author attribution.)-->
		<authorTag><![CDATA[A small tag sewn into the inside reads "MFD by DSG Costume Supply Co, Ltd."]]></authorTag>
	
		<!-- The base value of this clothing. I roughly base things on 1 flame = 10p, so 10 flames = Â£1.
			- Example: I've defined this as 60, which is about the price for a basic pair of socks or something similar.-->
		<value>225</value> 
		
		<!-- The determiner which is displayed before this item's name. While usually 'a' or 'an', for things like socks or gloves, you'll want to use 'a pair of'. I use the CDATA tag for all text values, as it allows html markup to be embedded without causing issues.
			- Example: I've defined this as "a pair of", so in-game, this item will be referred to as "a pair of socks". -->
		<determiner><![CDATA[]]></determiner>
		
		<!-- The *singular* name of this clothing.
			- Example: I've named this "template sock", as the singular for "template socks" is of course "sock"... -->
		<name appendColourName="false"><![CDATA[Mayhem's vest]]></name> <!-- You can leave out the 'appendColourName' attribute, but if you never want this clothing to be described by its colour, then set it as false. (i.e. If set to false, this clothing would always be called 'template socks' instead of, for example, 'white template socks')-->
		
		<!-- The plural form of the name. The attribute 'pluralByDefault' determines whether this item is naturally referred to as a plural (use true for things like socks or gloves).
			- Example: I've named the plural as "template socks", and defined pluralByDefault as true, so that this item will be referred to by this plural name in all but extremely exceptional circumstances.-->
		<namePlural pluralByDefault="false"><![CDATA[Mayhem's vests]]></namePlural> 
		
		<!-- This is the description which is shown in tooltips and on the item's inspection page.
			- Example: The description for ordinary, "boring" items of clothing might be a little dry, but as they won't be read by the player much, it doesn't really matter.-->
		<description><![CDATA[A two-toned, zip-up sleeveless garment accented with neon highlights. In the back, there is a large hole cut to accommodate a fin.]]></description> 
		
		<!-- The default physical resistance for this piece of clothing. Usually use 0, but if it's armour, then values of 1 up to 5 would be fitting (any more than that might be very OP). Physical resistance is a very powerful stat, so please keep within the range of 0-5. For all normal clothing, the value should be 0. This accepts decimal values, so for things like leather jackets (which aren't really armour, but are still protective), you can use 0.5 or so.
			- Example: Left as 0, as it's nomral, unarmoured clothing. -->
		<physicalResistance>0</physicalResistance> 
		
		<!-- Use FEMININE for if this clothing is intended for feminine characters, MASCULINE for masculine, and ANDROGYNOUS if it's able to be worn by anyone without penalties.
			- Example: Normal socks could be worn by both males and females without issue, so I set this to "ANDROGYNOUS". -->
		<femininity>FEMININE</femininity> 
		
		<!-- The slots that this clothing is able to be fit into. The game only supports up to 4 unique slots, so if you define more than 4, the rest of them won't show up in-game. These definitions preserve ordering, so use the top one for the most common slot to be fitted into. This is especially important for NPCs, as they will use the top slot for determining which slot this clothing should fit into.  Possible slots are found here: https://github.com/Innoxia/liliths-throne-public/blob/master/src/com/lilithsthrone/game/inventory/InventorySlot.java 
			- Example: I defined "SOCK" as the top slot, as this is the intended slot for socks. As I also want the player to be able to equip socks onto their hands, I defined "HAND" as a secondary slot.-->
		<equipSlots>
			<slot>TORSO_UNDER</slot>
		</equipSlots>
		
		<!-- The rarity of this item. Anything less than EPIC may end up being modified in the code. Possible rarities are found here: https://github.com/Innoxia/liliths-throne-public/blob/master/src/com/lilithsthrone/game/inventory/Rarity.java 
			- Example: Socks are most definitely "COMMON", but I've defined these as "LEGENDARY" so as to prevent them from naturally spawning in the game.-->
		<rarity>LEGENDARY</rarity> 
		
		<!-- The set that this clothing belongs to. I will add a way to define your own sets, but for now, existing sets can be found here: https://github.com/Innoxia/liliths-throne-public/blob/master/src/com/lilithsthrone/game/inventory/clothing/ClothingSet.java
			- Example: These socks have no set. If you want to define one, just use the name of the set like: <clothingSet>BUTLER</clothingSet> -->
		<clothingSet>dsg_mayhem_outfit</clothingSet>
		
		<!-- The file paths for this clothing's image. All images MUST BE .svg format. Colours to be used are described below, above the 'primaryColours' element. I use the free program 'InkScape' to make my .svg images. .svg images scale perfectly up and down to any size, so, while it should be a square, it doesn't really matter what size your canvas is (although I use 256x256 as a personal preference).
			- Example: I've defined this as "sock.svg", which should be placed in the same folder location alongside this xml file. -->
		<imageName>mayhem_vest.svg</imageName>
		
		<!-- The file paths for this clothing's image while equipped. The "slot" attribute determines the InventorySlot in which the defined file will be used.
			- Example: When equipped to the "SOCK" slot, the sock will be displayed using the "sock.svg" file. When equipped to the "HAND" slot, it will instead use the "sock_hand.svg" file. Again, this file must be placed in the same folder location alongside this xml file. -->
		<imageEquippedName/>
		
		<!-- For an annotated example on how stickers are defined, please see the 'res/mods/innoxia/items/clothing/rentalMommy/rental_mommy.xml' file -->
		<stickers/>
		
		<!-- How many enchantments can be fit into this item. It's typically best to let the game handle the default number of enchantments, which typically results in 100.
			- Example: I have not defined this, as I'll let the game keep the 100 enchantments default value.-->
		<enchantmentLimit/>
		
		<!-- The default effects that this clothing spawns in with. To know what to put in here, it would probably be easiest to enchant clothing in your game, save the game, then copy over that clothing's 'effects' in your save file.
			- Example: The first defined effect will give +3 to physical damage, while the second will give the wearer the masturbation fetish while worn. -->
		<effects/>
		
		<!-- This section determines how the clothing interacts with other clothing and the wearer's body.
			- Example: I've defined this section as being the one to be used when equipped to the "SOCK" slot.-->
		<blockedPartsList>
		
			<!-- You can add as many blockedParts elements as you like, but they should each have a different 'displacementType', and THERE SHOULD BE AT LEAST ONE, OF TYPE 'REMOVE_OR_EQUIP'.-->
			<blockedParts>
			
				<!-- If this clothing is displaced in the following way (in this case, by being removed), then the 'blockedBodyParts', 'clothingAccessBlocked', and 'concealedSlots' will all be revealed. If multiple 'blockedParts' block or conceal the same slot, only one 'blockedParts' needs to be displaced to reveal it. (e.g. If a pair of trousers has 'UNZIPS' and 'PULLS_DOWN' displacementTypes, and both of these contain the 'concealedSlots' 'slot' 'PENIS', then the penis will be revealed if either UNZIPS or PULLS_DOWN is activated.)
				A full list of displacementTypes can be found here: https://github.com/Innoxia/liliths-throne-public/blob/master/src/com/lilithsthrone/game/inventory/clothing/DisplacementType.java -->
				<displacementType>REMOVE_OR_EQUIP</displacementType> 
				
				<!-- The access required to perform this displacementType. clothingAccess values can be found here: https://github.com/Innoxia/liliths-throne-public/blob/master/src/com/lilithsthrone/game/inventory/clothing/ClothingAccess.java -->
				<clothingAccessRequired> 
					<clothingAccess>ARMS_UP_TO_SHOULDER</clothingAccess>
					<clothingAccess>HEAD</clothingAccess>
				</clothingAccessRequired>
				
				<!-- The body parts that are blocked by this 'displacementType'. bodyPart values can be found here: https://github.com/Innoxia/liliths-throne-public/blob/master/src/com/lilithsthrone/game/character/body/CoverableArea.java -->
				<blockedBodyParts>
					<bodyPart>FEET</bodyPart>
				</blockedBodyParts>
				
				<!-- The access that this 'displacementType' blocks. Again, clothingAccess values can be found here: https://github.com/Innoxia/liliths-throne-public/blob/master/src/com/lilithsthrone/game/inventory/clothing/ClothingAccess.java -->
				<clothingAccessBlocked/> <!-- Use the tag 'clothingAccess' for values inserted here. -->
				
				<!-- The slots that this 'displacementType' conceals. Possible slots are found here: https://github.com/Innoxia/liliths-throne-public/blob/master/src/com/lilithsthrone/game/inventory/InventorySlot.java -->
				<!-- You can also use a preset list by adding an attribute named "values" to this element (an example - "CS Example" - is in the blockedParts section below this one). The preset lists that you can use are found here: https://github.com/Innoxia/liliths-throne-public/blob/master/src/com/lilithsthrone/game/inventory/clothing/PresetConcealmentLists.java -->
				<concealedSlots/> <!-- Use the tag 'slot' for values inserted here. -->
			</blockedParts>
			
			<blockedParts>
				<displacementType>UNZIPS</displacementType>
				
				<clothingAccessRequired/>
				
				<blockedBodyParts>
					<bodyPart>NIPPLES</bodyPart>
					<bodyPart>STOMACH</bodyPart>
					<bodyPart>BACK</bodyPart>
				</blockedBodyParts>
				
				<clothingAccessBlocked>
					<clothingAccess>CHEST</clothingAccess>
					<clothingAccess>WAIST</clothingAccess>
				</clothingAccessBlocked>
				
				<concealedSlots>
					<slot>STOMACH</slot>
					<slot>CHEST</slot>
					<slot>NIPPLE</slot>
					<slot>PIERCING_NIPPLE</slot>
					<slot>PIERCING_STOMACH</slot>
				</concealedSlots>
			</blockedParts>
			
		</blockedPartsList>
		
		<!-- Inventory slots that are incompatible with this clothing. The game's swimsuit makes use of this, and, while fitting into the 'CHEST' slot, also blocks 'GROIN' and 'STOMACH'. Possible slots are found here: https://github.com/Innoxia/liliths-throne-public/blob/master/src/com/lilithsthrone/game/inventory/InventorySlot.java 
			- Example: You need to define an "incompatibleSlots" element for each slot that the clothing can be equipped into, so here, I've defined an empty one for "SOCK", and another empty one for "HAND".
			- Example 2: If you want to add slots, then use the element like so (which would block the FINGER slot when equipped into the WRIST slot): 
				<incompatibleSlots slot="WRIST">
					<slot>FINGER</slot>
				</incompatibleSlots>
		-->
		<incompatibleSlots/>
		
		<!-- Your clothing can be coloured any way you like, but if you'd like the player to be able to dye your clothing, you can specify available colours here. primaryColours, secondaryColours, and tertiaryColours can all spawn in as a default colour, while their 'Dye' counterparts are only available if the player chooses to dye the clothing in that colour. The game detects specific colour values, and recolours them to the value chosen by the player. These values are as follows:
		Red is used as base colour for changing the primary colour of the graphic in-game, and the game will only recognise and change the following colours:
			#ff2a2a
			#ff5555
			#ff8080
			#ffaaaa
			#ffd5d5
		Orange is used as base colour for changing the secondary colour of the graphic in-game, and the game will only recognise and change the following colours:
			#ff7f2a
			#ff9955
			#ffb380
			#ffccaa
			#ffe6d5
		Yellow is used as base colour for changing the tertiary colour of the graphic in-game, and the game will only recognise and change the following colours:
			#ffd42a
			#ffdd55
			#ffe680
			#ffeeaa
			#fff6d5
		ANY GRADIENTS THAT YOU USE SHOULD BE CALLED: "innoGrad1", "innoGrad2", etc.
		You can see a visual representation of these colours here: https://www.lilithsthrone.com/wiki/doku.php?id=modding_wiki:modding:creating_clothes
		Colour lists to be used can be found here: https://github.com/Innoxia/liliths-throne-public/blob/dev/src/com/lilithsthrone/utils/colours/ColourListPresets.java -->
		<primaryColours>
			<colour>CLOTHING_BLUE_NAVY</colour>
		</primaryColours>
		<primaryColoursDye/>
		<secondaryColours>
			<colour>CLOTHING_GREY_LIGHT</colour>
		</secondaryColours>
		<secondaryColoursDye/>
		<tertiaryColours>
			<colour>CLOTHING_GREEN_LIME</colour>
		</tertiaryColours>
		<tertiaryColoursDye/>
		
		<!-- These tags determine where in the world your clothing can be found, and what special attributes your clothing should have. Possible tags are found here: https://github.com/Innoxia/liliths-throne-public/blob/master/src/com/lilithsthrone/game/inventory/ItemTag.java -->
		<itemTags> <!-- itemTags without a 'slot' defined will have these tags added to every equippable slot. SHould only be used for generic tags like those related to which vendors sell it. -->
			<tag>SOLD_BY_NYAN</tag>
			<tag>FITS_FEATHERED_ARM_WINGS</tag>
		</itemTags>

	</coreAttributes>
	
	<!-- The following sections are for defining the descriptions of displacing or replacing your clothing. The attribute 'type' defines which DisplacementType your descriptions are applied to. For standard equipping and unequipping, use REMOVE_OR_EQUIP. Types can be found here: https://github.com/Innoxia/liliths-throne-public/blob/master/src/com/lilithsthrone/game/inventory/clothing/DisplacementType.java -->
	<!-- - Example: This is the equip text for when socks are equipped to the "SOCK" slot:-->
	<replacementText type="REMOVE_OR_EQUIP">
		<self>
			<![CDATA[[npc.Name] [npc.verb(pull)] the vest on to cover [npc.her] torso.]]>
		</self>
		<other>
			<![CDATA[[npc.Name] [npc.verb(pull)] the vest onto [npc2.namePos] to cover [npc2.her] torso.]]>
		</other>
		<otherRough>
			<![CDATA[[npc.Name] roughly [npc.verb(pull)] the vest onto [npc2.namePos] torso.]]>
		</otherRough>
	</replacementText>
	<!-- 'displacementText' is used for removal and displacement. -->
	<!-- - Example: This is the unequip text for when socks are removed from the "SOCK" slot:-->
	<displacementText type="REMOVE_OR_EQUIP">
		<self>
			<![CDATA[[npc.Name] [npc.verb(pull)] off [npc.her] vest.]]>
		</self>
		<other>
			<![CDATA[[npc.Name] [npc.verb(pull)] off [npc2.namePos] vest.]]>
		</other>
		<otherRough>
			<![CDATA[[npc.Name] roughly [npc.verb(pull)] off [npc2.namePos] socks.]]>
		</otherRough>
	</displacementText>
	
	<replacementText type="UNZIPS">
		<self>
			<![CDATA[[npc.Name] [npc.verb(zip)] [npc.her] vest back up.]]>
		</self>
		<other>
			<![CDATA[[npc.Name] [npc.verb(zip)] [npc2.namePos] vest back up.]]>
		</other>
		<otherRough>
			<![CDATA[[npc.Name] roughly [npc.verb(zip)] [npc2.namePos] vest back up.]]>
		</otherRough>
	</replacementText>
	<!-- 'displacementText' is used for removal and displacement. -->
	<!-- - Example: This is the unequip text for when socks are removed from the "SOCK" slot:-->
	<displacementText type="UNZIPS">
		<self>
			<![CDATA[[npc.Name] [npc.verb(unzip)] [npc.her] vest.]]>
		</self>
		<other>
			<![CDATA[[npc.Name] [npc.verb(unzip)] [npc2.her] vest.]]>
		</other>
		<otherRough>
			<![CDATA[[npc.Name] roughly [npc.verb(unzip)] [npc2.namePos] vest.]]>
		</otherRough>
	</displacementText>
	
</clothing>
